@model DoveLink.Applications.Member.Models.Member;
<div class="form-container">
    <div class="jumbotron mb-5">
        <div class="text-center">
            <i class="fas fa-user-edit"></i>
            <h1 class="display-4">Add Account Member Details</h1>
        </div>
    </div>
    <form class="row g-3 needs-validation" novalidate>
        <div class="col-md-2">
            @Html.LabelFor(m => m.Title, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control", })
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">
                Please choose a username.
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(m => m.FirstName, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", })
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">
                Please choose a username.
            </div>
        </div>
        <div class="col-md-2    ">
            @Html.LabelFor(m => m.MiddleName, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control", })
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(m => m.LastName, new { @class = "form-label" })
            @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control" } })
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-2">
            @Html.LabelFor(m => m.DateOfBirth, new { @class = "form-label" })
            @Html.EditorFor(m => m.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @placeholder = "dd/MM/yyyy" } })
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(m => m.Email, new { @class = "form-label" })
            @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "placeholder@example.com" } })
            <div class="invalid-feedback">
                Please choose a username.
            </div>
        </div>
        <div class="col-md-6">
            <label for="validationCustom03" class="form-label">City</label>
            <input type="text" class="form-control" id="validationCustom03" required>
            <div class="invalid-feedback">
                Please provide a valid city.
            </div>
        </div>
        <div class="col-md-3">
            <label for="validationCustom04" class="form-label">State</label>
            <select class="form-select" id="validationCustom04" required>
                <option selected disabled value="">Choose...</option>
                <option>...</option>
            </select>
            <div class="invalid-feedback">
                Please select a valid state.
            </div>
        </div>
        <div class="col-md-3">
            <label for="validationCustom05" class="form-label">Zip</label>
            <input type="text" class="form-control" id="validationCustom05" required>
            <div class="invalid-feedback">
                Please provide a valid zip.
            </div>
        </div>
        <div class="col-12">
            <div class="form-check">
                @Html.CheckBoxFor(m => m.IsPrimaryAccountHolder.Value, new { @class = "form-check-input", @disabled = "disabled" })
                <label class="form-check-label" for="invalidCheck">
                    Is primary account holder
                </label>
                <div class="invalid-feedback">
                    You must agree before submitting.
                </div>
            </div>
        </div>
        <div class="col-12">
            <button class="btn btn-primary" type="submit">Submit form</button>
        </div>
    </form>

    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                });
        })()

    </script>
</div>
